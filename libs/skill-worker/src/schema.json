{
  "openapi": "3.0.0",
  "info": {
    "title": "@digipair/skill-worker",
    "summary": "Worker",
    "description": "Digiworkers actions.",
    "version": "0.1.0",
    "x-icon": "ðŸ› "
  },
  "paths": {
    "/activity": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Activity",
        "description": "Execution of an activity.",
        "parameters": [
          {
            "name": "name",
            "summary": "Name",
            "required": true,
            "description": "Name of the activity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "execute",
            "summary": "Execute",
            "required": true,
            "description": "Commands to execute",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "https://schemas.digipair.ai/pinsSettings"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of executed activity commands with workflow step tracking",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Result from executePinsList - stored in context.workflow.steps[name]",
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-events": []
      }
    },
    "/stop": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Stop",
        "description": "Stop the reasoning",
        "parameters": [
          {
            "name": "value",
            "required": false,
            "summary": "Value",
            "description": "Value to return",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Worker stopped with return value",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Never returns normally - throws DIGIPAIR_STOP exception"
                }
              }
            }
          }
        },
        "x-events": []
      }
    },
    "/answer": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Answer",
        "description": "Provide an answer from the agent with content, assistant details, sources, and agent history.",
        "parameters": [
          {
            "name": "content",
            "summary": "Content",
            "required": true,
            "description": "Content of the response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          {
            "name": "prompt",
            "summary": "Prompt",
            "required": false,
            "description": "Additional prompt details",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sources",
            "summary": "Sources",
            "required": false,
            "description": "Sources of information used to generate the response",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          {
            "name": "agent_history",
            "summary": "Agent History",
            "required": false,
            "description": "History of agent interactions",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          {
            "name": "files",
            "summary": "Files",
            "required": false,
            "description": "Files associated with the response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/File"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RResponse provided by the agent with content, assistant details, sources, and agent history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "object",
                      "description": "Content of the response",
                      "additionalProperties": true
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Additional prompt details"
                    },
                    "sources": {
                      "type": "array",
                      "description": "Sources of information used to generate the response",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "agent_history": {
                      "type": "array",
                      "description": "History of agent interactions",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            }
          }
        },
        "x-events": []
      }
    }
  },
  "components": {
    "schemas": {
      "Parameter": {
        "type": "object",
        "tags": [
          "service"
        ],
        "summary": "Parameter",
        "properties": {
          "name": {
            "summary": "Name",
            "type": "string"
          },
          "summary": {
            "summary": "Summary",
            "type": "string"
          },
          "required": {
            "summary": "Required",
            "type": "boolean"
          },
          "ignoreForAI": {
            "summary": "Ignore for AI",
            "type": "boolean"
          },
          "schema": {
            "summary": "Schema",
            "type": "object"
          },
          "description": {
            "summary": "Summary",
            "type": "string"
          }
        },
        "required": [
          "name",
          "summary",
          "required",
          "schema"
        ]
      },
      "File": {
        "type": "object",
        "tags": [
          "service"
        ],
        "summary": "File",
        "properties": {
          "filename": {
            "type": "string",
            "summary": "File name"
          },
          "mimeType": {
            "type": "string",
            "summary": "MIME Type"
          },
          "uuid": {
            "type": "string",
            "summary": "UUID"
          }
        }
      },
      "Prompt": {
        "type": "object",
        "tags": [
          "service"
        ],
        "summary": "Prompt",
        "properties": {
          "title": {
            "type": "string",
            "summary": "Title"
          },
          "description": {
            "type": "string",
            "summary": "Description"
          },
          "prompt": {
            "type": "string",
            "summary": "Prompt"
          },
          "icon": {
            "type": "string",
            "summary": "Icon"
          },
          "tags": {
            "type": "array",
            "summary": "Tags",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "x-scene-blocks": {
    "/task": {
      "summary": "Task",
      "description": "Execution of a task.",
      "tags": [
        "service"
      ],
      "metadata": [],
      "parameters": [
        {
          "name": "execute",
          "summary": "Execute",
          "required": true,
          "description": "Commands to execute",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "https://schemas.digipair.ai/pinsSettings"
            }
          }
        }
      ]
    },
    "/action": {
      "summary": "Action",
      "description": "Executable action.",
      "tags": [
        "service"
      ],
      "metadata": [
        {
          "name": "parameters",
          "summary": "Parameters",
          "required": true,
          "description": "Input parameters",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          }
        },
        {
          "name": "output",
          "summary": "Output schema",
          "required": false,
          "description": "Output schema of the action",
          "schema": {
            "type": "object"
          }
        },
        {
          "name": "context",
          "summary": "Context",
          "required": false,
          "description": "Display execution context",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "prompts",
          "summary": "Prompts",
          "required": true,
          "description": "Prompts for the action",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prompts"
            }
          }
        }
      ],
      "parameters": [
        {
          "name": "execute",
          "summary": "Execute",
          "required": true,
          "description": "Commands to execute",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "https://schemas.digipair.ai/pinsSettings"
            }
          }
        }
      ]
    }
  }
}