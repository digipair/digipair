{
  "openapi": "3.0.0",
  "info": {
    "title": "@digipair/skill-oauth2",
    "summary": "OAuth2 Authorization Management",
    "description": "This skill allows managing OAuth2 authorizations",
    "version": "0.1.0",
    "x-icon": "üîê"
  },
  "paths": {
    "/authorizationCodeUrl": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Retrieve OAuth2 Authorization Code URL",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Authorization URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "OAuth2 authorization URL"
                }
              }
            }
          }
        }
      }
    },
    "/authorizationCodeAccessToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Retrieve OAuth2 Authorization Code Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "tokenParams",
            "summary": "Token Parameters",
            "required": true,
            "description": "Token Parameters",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Access token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "OAuth2 access token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "Token expiration time in seconds"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token for obtaining new access tokens"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Token scope"
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/authorizationCodeCreateToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Create OAuth2 Authorization Code Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "accessToken",
            "summary": "Access Token",
            "required": true,
            "description": "Access Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "OAuth2 token object created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OAuth2 token object with additional methods",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "OAuth2 access token"
                        },
                        "token_type": {
                          "type": "string",
                          "description": "Type of token"
                        },
                        "expires_in": {
                          "type": "number",
                          "description": "Token expiration time in seconds"
                        },
                        "refresh_token": {
                          "type": "string",
                          "description": "Refresh token"
                        }
                      }
                    },
                    "expired": {
                      "type": "string",
                      "description": "Method to check if token is expired"
                    },
                    "refresh": {
                      "type": "string",
                      "description": "Method to refresh the token"
                    },
                    "revoke": {
                      "type": "string",
                      "description": "Method to revoke the token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resourceOwnerPasswordAccessToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Retrieve OAuth2 Resource Owner Password Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "tokenParams",
            "summary": "Token Parameters",
            "required": true,
            "description": "Token Parameters",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Resource owner password access token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "OAuth2 access token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "Token expiration time in seconds"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token for obtaining new access tokens"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Token scope"
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/resourceOwnerPasswordCreateToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Create OAuth2 Resource Owner Password Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "accessToken",
            "summary": "Access Token",
            "required": true,
            "description": "Access Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Resource owner password token object created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OAuth2 token object with additional methods",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "OAuth2 access token"
                        },
                        "token_type": {
                          "type": "string",
                          "description": "Type of token"
                        },
                        "expires_in": {
                          "type": "number",
                          "description": "Token expiration time in seconds"
                        },
                        "refresh_token": {
                          "type": "string",
                          "description": "Refresh token"
                        }
                      }
                    },
                    "expired": {
                      "type": "string",
                      "description": "Method to check if token is expired"
                    },
                    "refresh": {
                      "type": "string",
                      "description": "Method to refresh the token"
                    },
                    "revoke": {
                      "type": "string",
                      "description": "Method to revoke the token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clientCredentialsAccessToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Retrieve OAuth2 Client Credentials Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "tokenParams",
            "summary": "Token Parameters",
            "required": true,
            "description": "Token Parameters",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Client credentials access token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "OAuth2 access token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "Token expiration time in seconds"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Token scope"
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/clientCredentialsCreateToken": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Create OAuth2 Client Credentials Token",
        "parameters": [
          {
            "name": "config",
            "summary": "Configuration",
            "required": true,
            "description": "OAuth2 Configuration",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "accessToken",
            "summary": "Access Token",
            "required": true,
            "description": "Access Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Client credentials token object created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OAuth2 token object with additional methods",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "OAuth2 access token"
                        },
                        "token_type": {
                          "type": "string",
                          "description": "Type of token"
                        },
                        "expires_in": {
                          "type": "number",
                          "description": "Token expiration time in seconds"
                        }
                      }
                    },
                    "expired": {
                      "type": "string",
                      "description": "Method to check if token is expired"
                    },
                    "revoke": {
                      "type": "string",
                      "description": "Method to revoke the token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokenExpired": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Check if the token is expired",
        "parameters": [
          {
            "name": "token",
            "summary": "Token",
            "required": true,
            "description": "Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Token expiration status checked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Whether the token is expired"
                }
              }
            }
          }
        }
      }
    },
    "/tokenRefresh": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Refresh the token",
        "parameters": [
          {
            "name": "token",
            "summary": "Token",
            "required": true,
            "description": "Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Refreshed OAuth2 token object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "description": "New OAuth2 access token"
                        },
                        "token_type": {
                          "type": "string",
                          "description": "Type of token"
                        },
                        "expires_in": {
                          "type": "number",
                          "description": "Token expiration time in seconds"
                        },
                        "refresh_token": {
                          "type": "string",
                          "description": "New refresh token"
                        }
                      }
                    },
                    "expired": {
                      "type": "string",
                      "description": "Method to check if token is expired"
                    },
                    "refresh": {
                      "type": "string",
                      "description": "Method to refresh the token"
                    },
                    "revoke": {
                      "type": "string",
                      "description": "Method to revoke the token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokenRevoke": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Revoke the token",
        "parameters": [
          {
            "name": "token",
            "summary": "Token",
            "required": true,
            "description": "Token",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "type",
            "summary": "Type",
            "required": true,
            "description": "Revocation Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Token revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Token revocation result",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the revocation was successful"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token that was revoked"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokenRevokeAll": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Revoke all tokens",
        "parameters": [
          {
            "name": "token",
            "summary": "Token",
            "required": true,
            "description": "Token",
            "schema": {
              "type": "object"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "All tokens revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Token revocation result for all tokens",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the revocation was successful"
                    },
                    "revoked_tokens": {
                      "type": "array",
                      "description": "List of revoked token types",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  },
  "x-scene-blocks": {}
}