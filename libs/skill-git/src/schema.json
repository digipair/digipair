{
  "openapi": "3.0.0",
  "info": {
    "title": "@digipair/skill-git",
    "summary": "Management of a git repository",
    "description": "This skill allows you to manage a git repository.",
    "version": "0.1.0",
    "x-icon": "ðŸ’¾"
  },
  "paths": {
    "/commit": {
      "post": {
        "tags": ["service"],
        "summary": "GIT Commit",
        "parameters": [
          {
            "name": "path",
            "summary": "Repository path",
            "required": false,
            "description": "Path of the GIT repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selector",
            "summary": "File selector",
            "required": false,
            "description": "Selector for the files to commit",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "summary": "Message",
            "required": false,
            "description": "Commit message",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Git commit successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "commit": {
                      "type": "string",
                      "description": "Commit hash",
                      "example": "abc123def456"
                    },
                    "summary": {
                      "type": "object",
                      "description": "Commit summary",
                      "properties": {
                        "changes": {
                          "type": "number",
                          "description": "Number of changes"
                        },
                        "insertions": {
                          "type": "number",
                          "description": "Number of insertions"
                        },
                        "deletions": {
                          "type": "number",
                          "description": "Number of deletions"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/push": {
      "post": {
        "tags": ["service"],
        "summary": "GIT Push",
        "parameters": [
          {
            "name": "path",
            "summary": "Repository path",
            "required": false,
            "description": "Path of the GIT repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "options",
            "summary": "Options",
            "required": false,
            "description": "Options sent during the push",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Git push successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repo": {
                      "type": "string",
                      "description": "Repository name",
                      "example": "origin"
                    },
                    "ref": {
                      "type": "object",
                      "description": "Reference information"
                    },
                    "pushed": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "Pushed commits"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/show": {
      "post": {
        "tags": ["service"],
        "summary": "GIT Show",
        "parameters": [
          {
            "name": "path",
            "summary": "Repository path",
            "required": false,
            "description": "Path of the GIT repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "options",
            "summary": "Options",
            "required": false,
            "description": "Options sent during the git show",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Git show result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Git show output",
                  "example": "commit abc123def456\\nAuthor: John Doe <john@example.com>\\nDate: Mon Jan 1 00:00:00 2023 +0000\\n\\n    Initial commit\\n\\ndiff --git a/file.txt b/file.txt\\n..."
                }
              }
            }
          }
        }
      }
    },
    "/log": {
      "post": {
        "tags": ["service"],
        "summary": "GIT Log",
        "parameters": [
          {
            "name": "path",
            "summary": "Repository path",
            "required": false,
            "description": "Path of the GIT repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "summary": "File",
            "required": false,
            "description": "File concerned by the log",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "summary": "Output format",
            "required": false,
            "description": "Output format described in pretty format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "summary": "Starting commit",
            "required": false,
            "description": "Identifier of the starting commit",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "summary": "Ending commit",
            "required": false,
            "description": "Identifier of the ending commit",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailMap",
            "summary": "Mail mapping",
            "required": false,
            "description": "Enables the use of email mapping in return values for email and name from the default format",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "maxCount",
            "summary": "Maximum number of results",
            "required": false,
            "description": "Limits the number of results to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "multiline",
            "summary": "Multiline",
            "required": false,
            "description": "Enables multiline values in the default format",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "splitter",
            "summary": "Splitter",
            "required": false,
            "description": "Character sequence to use as a delimiter between fields in the log, must be a value that does not appear in any log message (defaults to Ã²)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strictDate",
            "summary": "Strict date",
            "required": false,
            "description": "Switches the author date value from a format similar to ISO 8601 to a strict ISO 8601 format",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "symmetric",
            "summary": "Symmetric",
            "required": false,
            "description": "Enables the symmetric revision range rather than the two-dot range",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-events": [],
        "responses": {
          "200": {
            "description": "Git log result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "description": "Commit hash"
                          },
                          "date": {
                            "type": "string",
                            "description": "Commit date"
                          },
                          "message": {
                            "type": "string",
                            "description": "Commit message"
                          },
                          "author_name": {
                            "type": "string",
                            "description": "Author name"
                          },
                          "author_email": {
                            "type": "string",
                            "description": "Author email"
                          }
                        }
                      },
                      "description": "Array of commit objects"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total number of commits"
                    },
                    "latest": {
                      "type": "object",
                      "description": "Latest commit object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {}
  },
  "x-scene-blocks": {}
}
