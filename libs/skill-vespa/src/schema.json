{
  "openapi": "3.0.0",
  "info": {
    "title": "@digipair/skill-vespa",
    "summary": "Communication with a Vespa database",
    "description": "This skill provides functionalities to interact with the data of a Vespa vector database.",
    "version": "0.1.0",
    "x-icon": "ðŸ“˜"
  },
  "paths": {
    "/find": {
      "post": {
        "tags": ["service"],
        "summary": "Retrieve",
        "description": "Retrieve values from the database",
        "parameters": [
          {
            "name": "baseUrl",
            "summary": "Server address",
            "required": false,
            "description": "Address of the Vespa server",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "summary": "Collection name",
            "required": false,
            "description": "Name of the collection to search in",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "summary": "Limit",
            "required": false,
            "description": "Maximum number of responses",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderby",
            "summary": "Ordered by",
            "required": false,
            "description": "Ordering of the responses",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "summary": "Query",
            "required": true,
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grouping",
            "summary": "Grouping filter",
            "required": false,
            "description": "Grouping filter for the responses",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": []
      }
    },
    "/search": {
      "post": {
        "tags": ["service"],
        "summary": "Search",
        "description": "Semantic search in a collection",
        "parameters": [
          {
            "name": "embeddings",
            "summary": "Embeddings model",
            "required": false,
            "description": "Embeddings model",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "https://schemas.digipair.ai/pinsSettings"
              }
            }
          },
          {
            "name": "baseUrl",
            "summary": "Server address",
            "required": false,
            "description": "Address of the Vespa server",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "summary": "Collection name",
            "required": false,
            "description": "Name of the collection",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "summary": "Limit",
            "required": false,
            "description": "Maximum number of results",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderby",
            "summary": "Ordered by",
            "required": false,
            "description": "Ordering of the results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetHits",
            "summary": "",
            "required": false,
            "description": "targetHits",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter",
            "summary": "Filters",
            "required": false,
            "description": "Search filters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "summary": "Language",
            "required": true,
            "description": "Search language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "summary": "Text to search",
            "required": true,
            "description": "Semantic search query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": []
      }
    },
    "/textSplitter": {
      "post": {
        "tags": ["service"],
        "summary": "Text splitting",
        "description": "Splits the text into pieces",
        "parameters": [
          {
            "name": "size",
            "summary": "Size",
            "required": false,
            "description": "Size of the text pieces",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "overlap",
            "summary": "Tolerance",
            "required": false,
            "description": "Size difference tolerance to fit the text",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "source",
            "summary": "Source",
            "required": true,
            "description": "Metadata indicating the source of the data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "summary": "Text",
            "required": true,
            "description": "Text to split",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": []
      }
    },
    "/push": {
      "post": {
        "tags": ["service"],
        "summary": "Add documents",
        "description": "Add documents",
        "parameters": [
          {
            "name": "embeddings",
            "summary": "Embeddings model",
            "required": false,
            "description": "Embeddings model",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "https://schemas.digipair.ai/pinsSettings"
              }
            }
          },
          {
            "name": "baseUrl",
            "summary": "Server address",
            "required": false,
            "description": "Address of the Vespa server",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "summary": "Collection name",
            "required": false,
            "description": "Name of the collection to add documents to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documents",
            "summary": "Documents",
            "required": true,
            "description": "List of documents to add",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "x-events": []
      }
    },
    "/remove": {
      "post": {
        "tags": ["service"],
        "summary": "Delete",
        "description": "Delete documents from the database.",
        "parameters": [
          {
            "name": "baseUrl",
            "summary": "Server address",
            "required": false,
            "description": "Address of the Vespa server",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "summary": "Collection name",
            "required": false,
            "description": "Name of the collection to delete documents from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selection",
            "summary": "Selection",
            "required": true,
            "description": "Filter corresponding to the documents to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-events": []
      }
    }
  },
  "components": {
    "schemas": {}
  }
}
